#include "telegram_bot.h"
#include "config.h"

TelegramBot::TelegramBot() {
    bot = new FastBot();
    isInitialized = false;
    messageHandler = nullptr;
}

TelegramBot::~TelegramBot() {
    if (bot) {
        delete bot;
    }
}

void TelegramBot::begin(const String& token) {
    this->token = token;
    
    bot->setToken(token.c_str());
    isInitialized = true;
    
    Serial.println("Telegram bot initialized");
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤–∫–∞–∑—ñ–≤–Ω–∏–∫–∞ –Ω–∞ –µ–∫–∑–µ–º–ø–ª—è—Ä TelegramBot
static TelegramBot* currentBot = nullptr;

// –ì–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è-–æ–±–≥–æ—Ä—Ç–∫–∞
static void globalMessageHandler(FB_msg& msg) {
    if (currentBot) {
        currentBot->lastChatId = msg.chatID;  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID —á–∞—Ç—É
        if (currentBot->messageHandler) {
            currentBot->messageHandler(msg);  // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
        }
    }
}

void TelegramBot::setMessageHandler(void (*handler)(FB_msg&)) {
    if (isInitialized && bot) {
        messageHandler = handler;
        currentBot = this;
        bot->attach(globalMessageHandler);
    }
}

void TelegramBot::update() {
    if (isInitialized) {
        bot->tick();
    }
}

void TelegramBot::sendMessage(const String& message, const String& targetChatId) {
    if (isInitialized) {
        bot->sendMessage(targetChatId.c_str(), message.c_str());
    }
}

void TelegramBot::sendStatus() {
    if (isInitialized && lastChatId.length() > 0) {
        String status = "üîÑ ESP32 Status:\n";
        status += "üì∂ WiFi: " + String(WiFi.status() == WL_CONNECTED ? "Connected" : "Disconnected") + "\n";
        status += "üåê IP: " + WiFi.localIP().toString() + "\n";
        status += "üì± Version: " + String(FW_VERSION);
        
        sendMessage(status, lastChatId);
    }
}

void TelegramBot::sendVersion() {
    if (isInitialized && lastChatId.length() > 0) {
        String version = "üì± Current Version: " + String(FW_VERSION);
        sendMessage(version, lastChatId);
    }
}

void TelegramBot::handleCommands() {
    if (isInitialized) {
        // –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ callback —Ñ—É–Ω–∫—Ü—ñ—é
        // –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
    }
}

bool TelegramBot::isBotReady() {
    return isInitialized;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
// –ë—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –≤ main.cpp 